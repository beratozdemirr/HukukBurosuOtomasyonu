<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonKarsiTarafTipAra.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="buttonKarsiTarafBilgisiAra.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>